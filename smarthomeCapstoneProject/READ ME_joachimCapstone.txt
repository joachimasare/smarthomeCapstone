1. HOUSE AUTOMATION


The house automation consists of several python functions within the 'smarthome.py' file in the folder 'House Automation'. 


To run automation via buttons in Web app:


1. Run an ngrok server on the Raspberry pi
2. Open and edit the file 'server.py' to have the url generated by the ngrok server 
3. Run the python file, 'server.py' 
4. Now, when buttons on web app are linked to run the corresponding functions in 'smarthome.py' that is imported in 'server.py'
5. Click on a  button User web app dashboard UI to remotely control doors and windows


To run them by directly calling functions:


1. Open the smarthome.py file in a Python IDLE or suitable code editor.
2. Scroll to the bottom where there are commented python call functions 
3. Uncomment any function to run that automation feature. Eg. uncomment 'open_doorDownstairs' to open the door downstairs automatically.
4. Save and run file in Raspian Terminal or Rasbian UI of the raspberry pi.


NB: Make connections to pins (Broadcom format) exactly as done in the code




  2.  SENDING DATA FROM RASPBERRY PI TO.  MONGODB


1. Run an grok server on the localhost PC.
2. Insert generated url by ngrok into 'send_data.py'. To do this replace url assigned to BASE_URL in the code to the new url.
3. Save the 'send_data.py' file and run it.
 NB depending on Authorize and/or Unauthize selections made on the user dashboard. data would be sent to the MongoDB NoSQL database. 
Connections on the Raspberry pi must be exactly as shown in schematic.jpg attached 


  3.  RUNNING THE WEB APP FROM THE API FOLDER


1. Open the Web app folder 
2. Open Views folder
3. Open user_webapp.jade file in web browser. Eg. Chrome, Firefox or IE. This is to open the user_webapp
4. Open admin.jade file in web browser to launch the admin web app
5. The user-database.jade can be assessed via the User Database hyperlink in user_webapp window. This is to allow the user to preview the data entered into the MongoDB database.


Hint: Access script files in script.js , admin.js and mongodb.js to see relations and understand how functionalities of the pages was implemented.